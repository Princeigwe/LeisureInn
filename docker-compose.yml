version: '3'

services: 
    # rabbitmq service container
    rabbitmq:
        image: rabbitmq:3.9-management-alpine
        container_name: 'rabbitmq'
        ports: 
            - 5672:5672
            - 15672:15672

    # celery service container
    celery:
        build: .
        container_name: 'celery_LeisureInn'
        command: celery -A LeisureInn worker --loglevel=info
        volumes: 
            - .:/code
        depends_on: 
            - rabbitmq
    
    # for monitoring celery operation
    flower:
        build: .
        container_name: 'celery_flower'
        command: celery -A LeisureInn flower
        volumes:
            - .:/code
        ports:
            - 5555:5555
        depends_on: 
            - celery
            - rabbitmq

    # database(db) service container
    db:
        image: postgres
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            POSTGRES_HOST_AUTH_METHOD: "trust"
        

    # web service container
    web:
        build: .
        command: python /code/manage.py runserver 0.0.0.0:8000
        environment: 
            - FLUTTERWAVE_TEST_SECRET_KEY=${FLUTTERWAVE_TEST_SECRET_KEY}
            - FLUTTERWAVE_TEST_PUBLIC_KEY=${FLUTTERWAVE_TEST_PUBLIC_KEY}
        volumes: 
            - .:/code
        ports: 
            - 8000:8000
        depends_on: 
            - db
        links: 
            - rabbitmq  # so that web service knows about rabbitmq service